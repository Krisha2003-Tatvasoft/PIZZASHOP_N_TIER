@using Newtonsoft.Json
@using pizzashop.Entity.ViewModels
@model List<pizzashop.Entity.ViewModels.Section>;
@{
     var permissionCookie = Context.Request.Cookies["PermissionData"];
    var permissionModel = string.IsNullOrEmpty(permissionCookie)
    ? new PermissionRequest()
    : JsonConvert.DeserializeObject<PermissionRequest>(permissionCookie);

    var tablePermission = permissionModel?.Permissions?.FirstOrDefault(p => p.Moduleid == 4);
}

<ul class="list-unstyled">
    <div id="sortable-list-section">
        @foreach (var item in Model)
        {

            <li class="d-flex justify-content-between p-2 sec-list"  tabindex="0" data-id="@item.Sectionid">
                <a href="#" class="d-flex align-items-center gap-2 section-link" data-secid="@item.Sectionid">
                    <i class="fa-solid fa-grip-vertical"></i>
                    <div>
                        @item.Sectionname
                    </div>
                </a>
                
                <div class="d-flex gap-1 edit-delet">
                    @if (tablePermission.Canaddedit == true)
                    {
                    <button class="button edit-section" data-sectionid="@item.Sectionid"><img class="d-none"
                            src="../images/pencil.svg"></button>
                            }
                    @if (tablePermission.Candelete == true)
                    {
                    <button class="button delete-section-link" data-bs-toggle="modal" data-bs-target="#deleteSection"
                        data-sectionid="@item.Sectionid"><img class="delete-icon d-none" src="../images/trash.svg"></button>
                    }
                </div>
            </li>
        }
    </div>
</ul>




<script>

    $(document).ready(function () {


        $(".edit-section").click(function (e) {
            e.preventDefault();
            var sectionid = $(this).data("sectionid");

            $.ajax({
                url: "/TableAndSection/EditSection",
                type: "GET",
                data: { id: sectionid },
                success: function (data) {
                    $(".modal-editsection").html(data);
                    $("#editSection").modal("show");
                },
                error: function () {
                    alert("failed to reload modal");
                }
            });

        });

        $(document).on("click", ".delete-section-link", function (e) {
            var sectionid = $(this).data("sectionid");
            $("#hidden").val(sectionid);
        });


        var sortable = new Sortable(document.getElementById('sortable-list-section'), {
            animation: 150,
            onEnd: function (evt) {
                var order = [];
                $('#sortable-list-section li').each(function () {
                    order.push($(this).data('id'));
                });
                console.log(order, "after");
                $.ajax({
                    type: "POST",
                    url: "/TableAndSection/SaveOrderSection",
                    data: JSON.stringify(order),
                    contentType: "application/json",
                    success: function (response) {
                        if (response.success) {
                            toastr.success("Order saved successfully!");
                        } else {
                            toastr.error("Error saving order!");
                        }
                        console.log("Order saved successfully!");
                    },
                    error: function (error) {
                        console.error("Error saving order:", error);
                    }
                });
            }
        });


    });


</script>
