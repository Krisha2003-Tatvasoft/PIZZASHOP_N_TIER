@{

    Layout = "~/Views/Shared/_OrderAppLayout.cshtml";
}

<link rel="stylesheet" href="~/css/WaitingList.css" />

<div class="d-flex justify-content-between mb-3">
    <h1 class="" style="color: #087cc4;">Waiting Token</h1>

    <button class="btn d-flex align-items-center waiting-token-btn" style="color: #087cc4; 
          background-color: #ffffff; border: 1px solid #087cc4;">
        <i class="bi bi-plus fs-4  me-1 "></i><span class="d-none d-sm-inline">Waiting Token</span>
    </button>
</div>

<div class="menu-category">
    <nav>
        <div class="nav nav-tabs px-4 waiting-section-partial flex-nowrap overflow-x-auto overflow-y-hidden"
            id="nav-tab" role="tablist">
        </div>
    </nav>

    <div class="tab-content w-100 waiting-table-partial" id="nav-tabContent">


    </div>


</div>

<div id="Waiting-token-modal"></div>

<div id="assign-table-model"></div>


<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>


<script>

    let currentSectionId = 0;

    $(document).ready(function () {

        // Create a connection to the SignalR hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/ChatHub") // Ensure this matches the hub route in your app
            .build();

        // Start the connection
        connection.start()
            .then(() => console.log("SignalR connected"))
            .catch(err => console.error("SignalR connection error:", err));

        // Handle the TableAdded event
        connection.on("WTListUpdated", function () {
            loadTableList(currentSectionId);
            loadsectionList();
        });

        // Handle the TableAdded event
        connection.on("AssignTable", function () {
            loadTableList(currentSectionId);
            loadsectionList();
        });


        function loadsectionList() {
            $.ajax({

                url: "/WaitingList/WaitingSectionList",
                type: "GET",
                success: function (data) {
                    $('.waiting-section-partial').html(data);
                    $(`.sec-class`).removeClass('active').attr('aria-selected', 'false');
                    $(`.sec-class[data-sectionid="${currentSectionId}"]`).addClass('active').attr('aria-selected', 'true');
                },
                error: function () {

                }
            });
        }

        loadsectionList();

        function loadTableList(sectionid) {
            currentSectionId = sectionid;

            $.ajax({

                url: "/WaitingList/WaitingTableList",
                type: "GET",
                data: { sectionid: sectionid },
                success: function (data) {
                    $('.waiting-table-partial').html(data);
                     updateWaitingTimes();
                },
                error: function () {
                }
            });
        }

        loadTableList(0);

        $(document).on("click", ".sec-class", function (e) {
            var sectionid = $(this).data("sectionid");
            loadTableList(sectionid);
        });


        @* edit tax post  *@

            $(document).on("click", "#edit-wt-yes", function (e) {
                e.preventDefault();

                if ($("#edit-wt-form").valid()) {

                    var formData = new FormData($("#edit-wt-form")[0]);

                    var Sectionid = formData.get("Sectionid");


                    $.ajax({
                        url: "/WaitingList/EditWTPost",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        dataType: 'json',
                        success: function (response) {
                            if (response.success == true) {
                                $("#editWT").modal("hide");
                                loadTableList(Sectionid);
                                loadsectionList();
                                toastr.success(response.message);
                            }
                            else {
                                toastr.error(response.message);
                            }

                        },
                        error: function (error) {
                            console.error("Error updating WaitingToken:", error);
                        }
                    });

                }

            });


        @* email-exists *@

            @* $(document).on("blur", ".edit-Email", function (e) {
                var email = $(this).val();
                var customId = $("#customer-id").val();
                console.log(customId);

                if (email) {
                    $.ajax({
                        url: '/WaitingList/EmailExist',
                        type: 'GET',
                        data: { email: email, customId: customId },
                        success: function (data) {
                            if (data.success == true) {
                                $(".email-exist").text("email already exist.")
                            }
                            else {
                            }
                        },
                        error: function () {
                            console.error('Failed to fetch customer');
                        }
                    });
                }
            }); *@



            @* Delete Table *@

            $(document).on("click", ".delete-wt", function (e) {
                var tokenId = $("#hidden").val();
                var sectionid = $("#sectionid").val();

                $.ajax({
                    url: "/WaitingList/DeleteWT",
                    type: "POST",
                    data: { id: tokenId },
                    success: function (response) {
                        loadTableList(sectionid);
                        loadsectionList();
                        toastr.success("WaitingToken Deleted Succesfully.");
                    },
                    error: function (error) {
                        console.error("Error in delete delete WaitingToken:", error);
                    }
                });

            });

        @* Add Waiting Token *@

            $(document).on("click", ".waiting-token-btn", function (e) {
                e.preventDefault();

                $.ajax({
                    url: "/WaitingList/AddWaitingToken",
                    type: "GET",
                    success: function (data) {
                        $('#Waiting-token-modal').html(data);
                        $("#addNewWaitingToken").modal("show");
                    },
                    error: function () {
                    }
                });

            });


        $(document).on("click", "#add-WT-Yes", function (e) {
            e.preventDefault();

            // Trigger the client-side validation first
            if ($("#add-WT").valid()) {
                var formData = new FormData($("#add-WT")[0]);

                var Sectionid = formData.get("Sectionid");
                console.log(Sectionid);

                $.ajax({
                    url: "/TableOrderApp/AddWTPost",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            // Reset the form and close the modal if successful
                            $("#add-WT")[0].reset();
                            $("#addNewWaitingToken").modal("hide");
                            loadTableList(Sectionid);
                            loadsectionList();
                            toastr.success(response.message);
                        }
                        else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (error) {
                        console.error("Error in Create Token.", error);
                        toastr.error("Internal server error");
                    }
                });
            }

        });


        @* autofill by email *@

            $(document).on("blur", ".Email", function (e) {
                var email = $(this).val();

                if (email) {
                    $.ajax({
                        url: '/TableOrderApp/GetCustomerByEmail',
                        type: 'GET',
                        data: { email: email },
                        success: function (data) {
                            if (data.success == true) {
                                $('.Name').val(data.customerName);
                                $('.Mobile_Number').val(data.phoneNo);
                            }
                            else {
                                $('.Name').val('');
                                $('.Mobile_Number').val('');
                            }
                        },
                        error: function () {
                            console.error('Failed to fetch customer');
                        }
                    });
                }
            });


        let selectedSections = [];

        function formatTimeDiff(createdTime) {
            const now = new Date();
            const diffMs = now - createdTime;

            if (diffMs < 0) return ''; // in case of future date

            const totalMinutes = Math.floor(diffMs / 60000);
            const hrs = Math.floor(totalMinutes / 60);
            const mins = totalMinutes % 60;

            return `${hrs} hrs ${mins} min`;
        }

        function updateWaitingTimes() {
            $('.waiting-time').each(function () {
                const timeStr = $(this).data('time');
                if (timeStr) {
                    const createdAt = new Date(timeStr);
                    const formatted = formatTimeDiff(createdAt);
                    $(this).text(formatted);
                }
            });
        }

        // Initial run
        updateWaitingTimes();

        // Update every second
        setInterval(updateWaitingTimes, 1000);
        
        @* get edit waiting token *@

        $(document).on("click", ".edit-wt", function (e) {
            e.preventDefault();
            var WTid = $(this).data("wt-id");


            $.ajax({
                url: "/WaitingList/EditWT",
                type: "GET",
                data: { id: WTid },
                success: function (data) {
                    $(".modal-editWT").html(data);
                    $("#editWT").modal("show");
                },
                error: function () {
                    alert("failed to reload modal");
                }
            });

        });

        $(document).on("click", ".delete-WT-link", function (e) {
            var Waitingtokenid = $(this).data("wt-id");
            var sectioid = $(this).data("sectioid");

            $("#hidden").val(Waitingtokenid);
            $("#sectionid").val(sectioid);

        });


        @* assign table *@

            $(document).on("click", ".assign-table-link", function (e) {
                e.preventDefault();
                var sectionid = $(this).data("sectionid");
                var Waitingtokenid = $(this).data("wt-id");

                $.ajax({
                    url: "/WaitingList/AssignTable",
                    type: "GET",
                    success: function (data) {
                        $("#sectionDropdownMenu").empty();
                        selectedSections = [];
                        @* $("#Sectionid").append('<option selected disabled value="">Select Section</option>'); *@

                            $("#tableDropdownMenu").empty();
                        $("#tableDropdownBtn").html("Select Tables");

                        selectedTables = [];


                        // Fetch and repopulate section options
                        $.get("/WaitingList/GetSection", function (data) {
                            $.each(data, function (index, section) {
                                var sectioid = $("#sectionDropdownBtn").val();
                                const isChecked = section.value == sectionid ? 'checked' : '';
                                $("#sectionDropdownMenu").append(`
                            <li>
                              <div class="form-check mx-2 w-100">
                                 <input class="form-check-input section-checkbox" type="checkbox" value="${section.value}" id="section_${section.value}" ${isChecked}>
                                 <label class="form-check-label w-100"  for="section_${section.value}">${section.text}</label>
                               </div>
                             </li>
                            `);

                                if (section.value == sectionid) {
                                    selectedSections.push(section.value);
                                    loadTablesForSection(section.value);   // <-- this line makes sure its tables are loaded
                                }
                            });
                            updateSectionDropdownText();
                        });

                        $("#assign-table-model").html(data);
                        $("#AssignTable").modal("show");
                        $(".waitingToken").val(Waitingtokenid);
                    },
                    error: function () {
                        alert("failed to reload modal");
                    }
                });

            });



        function loadTablesForSection(sectioid) {
            $.get("/WaitingList/GetTable?sectioid=" + sectioid, function (data) {
                $.each(data, function (index, table) {
                    $("#tableDropdownMenu").append(`
                <li data-section="${sectioid}">
                    <div class="form-check mx-2 w-100">
                        <input class="form-check-input table-checkbox" type="checkbox" value="${table.value}" id="table_${table.value}">
                        <label class="form-check-label w-100" for="table_${table.value}">${table.text}</label>
                    </div>
                </li>
            `);
                });
                @* updateDropdownText();  // <-- update table dropdown button text *@
            });
        }


        let selectedTables = [];

        // Handle checkbox selection/deselection and update dropdown content
        $(document).on("change", ".table-checkbox", function (e) {
            const value = $(this).val();
            const label = $(this).next("label").text();
            const sectionId = $(this).closest("li").data("section");

            if ($(this).is(":checked")) {
                selectedTables.push({ id: value, label: label, section: sectionId }); // <-- include section
            } else {
                selectedTables = selectedTables.filter(table => table.id !== value);
            }
            updateDropdownText();
        });

        $(document).on('click', '.table-checkbox-input, .table-checkbox-label', function (e) {
            e.stopPropagation();
        });


        function updateDropdownText() {
            if (selectedTables.length === 0) {
                $("#tableDropdownBtn").html("Select Tables");
                $(".table-list").text("Select At least 1 table.")
            } else if (selectedTables.length === 1) {
                $("#tableDropdownBtn").html(`<span class=" selected-item-pill">${selectedTables[0].label}</span>`);
                $(".table-list").text("");
            } else {
                $("#tableDropdownBtn").html(
                    `<span class=" selected-item-pill">${selectedTables[0].label}</span>` +
                    `<span class=" others-count">+${selectedTables.length - 1} selected</span>`
                );
                $(".table-list").text("");
            }
        }


        function updateSectionDropdownText() {
            if (selectedSections.length === 0) {
                $("#sectionDropdownBtn").html("Select Sections");
                $("#tableDropdownBtn").html("Select Tables");
            } else if (selectedSections.length === 1) {
                const sectionLabel = $(`#section_${selectedSections[0]}`).next("label").text();
                $("#sectionDropdownBtn").html(`<span class="selected-item-pill">${sectionLabel}</span>`);
            } else {
                const sectionLabel = $(`#section_${selectedSections[0]}`).next("label").text();
                $("#sectionDropdownBtn").html(`<span class="selected-item-pill">${sectionLabel}</span><span class="others-count">+${selectedSections.length - 1} </span>`);
            }
        }

        $(document).on("change", ".section-checkbox", function () {
            const value = $(this).val();

            if ($(this).is(":checked")) {
                if (!selectedSections.includes(value)) {
                    selectedSections.push(value);
                }
                loadTablesForSection(value);
            } else {
                selectedSections = selectedSections.filter(id => id !== value);
                removeTablesForSection(value);
            }
            updateSectionDropdownText();
        });

        function removeTablesForSection(sectioid) {
            $(`#tableDropdownMenu li[data-section='${sectioid}']`).remove();
            selectedTables = selectedTables.filter(t => parseInt(t.section) !== parseInt(sectioid));
            updateDropdownText();
        }

        function redirectToMenuOrders(orderId) {
            const encodedOrderId = btoa(orderId.toString()); // base64 encode
            window.location.href = `/MenuOrderApp/MenuOrders?orderId=${encodedOrderId}`;
        }

        $(document).on("click", ".Assign-tables-yes", function () {

            let tableIds = selectedTables.map(t => t.id);
            console.log(tableIds.length)
            if (tableIds.length <= 0) {
                $(".table-list").text("Select At least 1 table.")
            }
            else {
                let sectionId = $("#Sectionid").val();
                if ($("#assignTable-form").valid()) {
                    var formData = new FormData($("#assignTable-form")[0]);
                    formData.append("TableIds", JSON.stringify(tableIds));


                    $.ajax({
                        url: "/WaitingList/AssignTablePost",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        dataType: 'json',
                        success: function (response) {
                            if (response.success) {
                                $("#assignTable-form")[0].reset();
                                $("#AssignTable").modal("hide");
                                redirectToMenuOrders(response.orderid);
                            }
                            else {
                                toastr.error(response.message);
                            }

                        },
                        error: function (error) {
                            console.error("Error in assign table:", error);
                        }
                    });


                }
            }
        });





    });
</script>
