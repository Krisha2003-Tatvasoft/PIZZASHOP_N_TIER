@using Newtonsoft.Json
@using pizzashop.Entity.ViewModels
@model List<pizzashop.Entity.ViewModels.ModifiersGroup>;

     @{
         var permissionCookie = Context.Request.Cookies["PermissionData"];
    var permissionModel = string.IsNullOrEmpty(permissionCookie)
    ? new PermissionRequest()
    : JsonConvert.DeserializeObject<PermissionRequest>(permissionCookie);

      var menuPermission = permissionModel?.Permissions?.FirstOrDefault(p => p.Moduleid == 3);
    }

<ul class="list-unstyled">
    <div id="sortable-list-mg">
        @foreach (var item in Model)
        {
            <li class="d-flex justify-content-between p-2 mg-list mg-active" tabindex="0" data-id="@item.Modifiergroupid">
                <a href="#" class="MG-link  d-flex align-items-center gap-2" data-id="@item.Modifiergroupid">
                   <i class="fa-solid fa-grip-vertical"></i>
                    <div>
                        @item.Modifiergroupname
                    </div>
                </a>
                <div class="d-flex gap-1 edit-delet">
                     @if (menuPermission.Canaddedit == true)
                    {
                    <button class="button edit-MG" data-modifiergroupid="@item.Modifiergroupid">
                        <img class="icon d-none" src="../images/pencil.svg">
                    </button>
                    }
                      @if (menuPermission.Candelete == true)
                    {
                    <button class="button delete-MG-link" data-bs-toggle="modal" data-bs-target="#deleteModifiersGrop"
                        data-modifiergroupid="@item.Modifiergroupid">
                        <img class="delete-icon icon  d-none" src="../images/trash.svg"></button>
                        }
                </div>
            </li>
        }
    </div>
</ul>





<script>

    $(document).ready(function () {


        var sortable = new Sortable(document.getElementById('sortable-list-mg'), {
            animation: 150,
            onEnd: function (evt) {
                var order = [];
                $('#sortable-list-mg li').each(function () {
                    order.push($(this).data('id'));
                });
                console.log(order, "after");
                $.ajax({
                    type: "POST",
                    url: "/Menu/SaveOrderMg",
                    data: JSON.stringify(order),
                    contentType: "application/json",
                    success: function (response) {
                        if (response.success) {
                            toastr.success("Order saved successfully!");
                        } else {
                            toastr.error("Error saving order!");
                        }
                        console.log("Order saved successfully!");
                    },
                    error: function (error) {
                        console.error("Error saving order:", error);
                    }
                });
            }
        });


        $(document).on("click", ".delete-MG-link", function (e) {
            var MGId = $(this).data("modifiergroupid");
            $("#hidden").val(MGId);
        });

    });


</script>
