@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using pizzashop.Entity.Models
@model List<pizzashop.Entity.ViewModels.OrderTableView>;

 <div class="accordion" id="accordionPanelsStayOpenExample">
 @{
  int AvailableCount = 0;
  int AssignedCount =0;
  int RunningCount = 0;
  int index =0;
}  

@foreach (var tableSection in Model)
{
    AvailableCount = 0;
     AssignedCount =0;
     RunningCount = 0;
     @foreach(var tables in tableSection.Tables)
     {
         if(tables.tablestatus == Enums.tablestatus.Available)
         {
           AvailableCount++;
         }
         else if(tables.orderstatus == Enums.orderstatus.InProgress || tables.orderstatus == Enums.orderstatus.Served )
         {
          RunningCount++;
         }
         else
         {
           AssignedCount++;
         }
     }

    <!-- Floor: Ground -->
    <div class="accordion-item mb-3">
      <div class="d-block d-md-flex align-items-center justify-content-between gap-1 px-1 py-1">

        <div class="d-flex flex-row align-items-center">
          <h4 class="accordion-header">
            <button class="accordion-button @(index == 0 ? "" : "collapsed")" type="button" 
            data-bs-toggle="collapse" 
             data-bs-target="#collapse-@tableSection.Sectionid"
              aria-expanded= "@(index == 0 ? "true": "false")"  aria-controls ="#collapse-@tableSection.Sectionid">
            </button>
          </h4>
          <h3 style="color: #087cc4;">@tableSection.Sectionname</h3>
        </div>

        <div class="d-flex  gap-3 justify-content-center flex-sm-nowrap flex-wrap pe-2">
          <div class="d-flex flex-row align-items-center">
            <span class="dot me-2" style="background-color: #bbb;border-color: #bbb;"></span>
            <span>@AvailableCount</span>
          </div>
          <div class="d-flex flex-row align-items-center">
            <span class="dot me-2" style="background-color: #48fc11;border-color: #78ff7f;"></span>
            <span>@AssignedCount</span>
          </div>
          <div class="d-flex flex-row align-items-center">
            <span class="dot me-2" style="background-color: #3ab0d4;border-color: #3ab0d4;"></span>
            <span>@RunningCount</span>
          </div>
          <button class="btn d-flex align-items-center waiting-token-btn" style="color: #087cc4; 
          background-color: #ffffff; border: 1px solid #087cc4;" data-section-id="@tableSection.Sectionid">
          <i class="bi bi-plus fs-5 me-1"></i><span>Waiting Token</span>
          </button>
        </div>
      </div>

      <div id="collapse-@tableSection.Sectionid" class="accordion-collapse collapse @(index == 0 ? "show" : "")" 
        data-bs-parent="#accordionPanelsStayOpenExample">
        <div class="accordion-body">
          <div class="d-flex flex-wrap w-100 gap-3">
            @foreach(var tables in tableSection.Tables)
            {
            <div class="card p-3 d-flex justify-content-center 
            @(tables.tablestatus == Enums.tablestatus.Available ? "class-available" :"") 
            @(tables.orderstatus == Enums.orderstatus.Pending &&  tables.tablestatus != Enums.tablestatus.Available ? "class-assign" :"")
            @(tables.orderstatus == Enums.orderstatus.InProgress || tables.orderstatus == Enums.orderstatus.Served ? "class-running" :"")" 
            data-table-id = @tables.Tableid
            data-orderid="@tables.Orderid"
            style="height:150px;width:290px; cursor: pointer;"
             onclick="toggleTableSelection(this)">
              <div class="d-flex justify-content-between align-items-center pb-3">
                <h4>@tables.Tablename</h4>
                <span>@tables.Totalamount</span>
              </div>

              <div class="d-flex justify-content-between gap-5">
                <div class="d-flex flex-column">
                  <div>
                    <i class="bi bi-people"></i>
                  </div>
                  <div>
                    <span>@tables.Capacity</span>
                  </div>

                </div>

                <div class="d-flex flex-column justify-content-center align-items-center text-center  ">
                  <i class="bi bi-alarm"></i>
                  <span class="d-flex align-items-center justify-content-center text-center">
                    @(tables.orderstatus == Enums.orderstatus.InProgress || tables.orderstatus == Enums.orderstatus.Served ?  
                     tables.RunningSince :  0)</span>

                </div>
              </div>
            </div>

            }
          </div>

          <!-- Status and Buttons -->
          <div class="d-flex justify-content-end align-items-center mt-1">
            <button class="btn btn-primary btn-sm me-2 assign-btn" disabled data-bs-toggle="offcanvas"
            data-bs-target="#AssignTable" aria-controls="AssignTable"
            data-section-id="@tableSection.Sectionid" >Assign</button>
          </div>

        </div>
      </div>
    </div>
    index++;
}

<div id="Waiting-token-modal"></div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="AssignTable" aria-labelledby="AssignTable">
  <div class="offcanvas-header">
    <div style="color: #087cc4;">
      <h5><b>Waiting List</b></h5>
    </div>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <div id="waiting-list-partial"></div>
    <div style="color: #087cc4;" class="mt-2 mb-4">
      <h5><b>Customer Details</b></h5>
    </div>
     <div id="assign-table-partial"></div>
</div>
</div>


  
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>


<script>

$(document).ready(function () {

   var tableIds = [];
  
   function toggleTableSelection(elem) {
     var $elem = $(elem);
     if ($elem.hasClass('class-available')) {
     var $currentSectionBody = $elem.closest('.accordion-body');

     // Deselect tables in all other sections
     $('.accordion-body').each(function () {
      if (!$(this).is($currentSectionBody)) {
      $(this).find('.selected-table').removeClass('selected-table');

      // Disable assign button in other sections
       var $otherAssignBtn = $(this).find('.assign-btn');
       if ($otherAssignBtn.length) {
      $otherAssignBtn.prop('disabled', true);
        }
      }
    });

  // Toggle current clicked table
  $elem.toggleClass('selected-table');

// Enable/disable assign button
var $assignBtn = $currentSectionBody.find('.assign-btn');
var selectedCount = $currentSectionBody.find('.selected-table').length;
$assignBtn.prop('disabled', selectedCount === 0);
     }
     else
     {
        redirectToMenuOrders($elem.data('orderid'));
     }
  }

     // Assign button click handler
         $('.assign-btn').on('click', function () {
            var sectionId = $(this).data('section-id');
            var selectedTables = $(this).closest('.accordion-body').find('.selected-table');
            tableIds = [];

             selectedTables.each(function () {
              var tableId = $(this).data('table-id');
                if (tableId) {
                       tableIds.push(tableId);
                   }
              });

          if (tableIds.length > 0) {
            console.log("Section ID:", sectionId);
            console.log("Selected Table IDs:", tableIds);
             }

                $.ajax({
                    url: "/TableOrderApp/GetWaitingListParial",
                    type: "GET",
                    data: {
                        id: sectionId,
                    },
                    success: function (data) {
                        $('#waiting-list-partial').html(data);
                    },
                    error: function () {
                    }
                }); 

                 $.ajax({
                    url: "/TableOrderApp/AssignTable",
                    type: "GET",
                    data: {
                        id: sectionId,
                    },
                    success: function (data) {
                        $('#assign-table-partial').html(data);
                    },
                    error: function () {
                    }
                }); 

          });

      // Attach toggleTableSelection function globally
     window.toggleTableSelection = toggleTableSelection;

        $(document).on("click", ".waiting-token-btn", function (e) {
          e.preventDefault();
            var sectionId = $(this).data("section-id");
  

                $.ajax({
                    url: "/TableOrderApp/AddWaitingToken",
                    type: "GET",
                    data: {
                        id: sectionId,
                    },
                    success: function (data) {
                        $('#Waiting-token-modal').html(data);
                         $("#addNewWaitingToken").modal("show");
                    },
                    error: function () {
                    }
                }); 
           
        });


   $(document).on("blur", ".Email", function (e)  {
         var email = $(this).val();
 
        if (email) {
           $.ajax({
            url: '/TableOrderApp/GetCustomerByEmail',
            type: 'GET',
            data: { email: email },
            success: function (data) {
                if (data.success == true) {
                    $('.Name').val(data.customerName);
                    $('.Mobile_Number').val(data.phoneNo);
                }
                else{
                    $('.Name').val('');
                    $('.Mobile_Number').val('');
                }
            },
            error: function () {
                console.error('Failed to fetch customer');
            }
        });
        }
   });



        $(document).on("click", "#add-WT-Yes", function (e) {
                e.preventDefault();
                  console.log("hiiii"); 

                // Trigger the client-side validation first
               if ($("#add-WT").valid()) { 
                    var formData = new FormData($("#add-WT")[0]);

                    $.ajax({
                        url: "/TableOrderApp/AddWTPost",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        dataType: 'json',
                        success: function (response) {
                           
                            if (response.success) {
                                // Reset the form and close the modal if successful
                                $("#add-WT")[0].reset();
                                $("#addNewWaitingToken").modal("hide");
                                toastr.success(response.message);
                            } 
                            else
                            {
                              toastr.error(response.message);
                            }
                        },
                        error: function (error) {
                           console.log("in error part");
                          toastr.error("Interval server Error.");
                        }
                    });
                } 

            });


        $(document).on("change", ".waiting-list-radio", function (e)  {
         var wT = $(this).val();
        
 
        if (wT) {
           $.ajax({
            url: '/TableOrderApp/GetCustomerByWaitingToken',
            type: 'GET',
            data: { Id: wT },
            success: function (data) {
                if (data.success == true) {
                    $('.Name').val(data.customerName).prop("readonly" , true);
                     $('.Mobile_Number').val(data.phoneNo).prop("readonly" , true);
                      $('.Email').val(data.email).prop("readonly" , true);
                         $('.noOfPersons').val(data.noofperson);
                        $('.waitingListId').val(data.waitingtokenid);
                          
                }
                else{

                     $('.Name').val('');
                     $('.Mobile_Number').val('');
                     $('.Email').val('');
                     $('.noOfPersons').val('');
                     $('.waitingListId').val('');
                }
            },
            error: function () {
                console.error('Failed to fetch customer');
            }
        });
        } 
   });


   function redirectToMenuOrders(orderId) {
        window.location.href = `/MenuOrderApp/MenuOrders?orderId=${orderId}`;
}

window.redirectToMenuOrders = redirectToMenuOrders;



       $(document).on("click", ".Assign-customer-yes", function (e)  {
           e.preventDefault();
            if ($("#assign-table-form").valid()) { 
            var formData = new FormData($("#assign-table-form")[0]);
           formData.append("TableIds", JSON.stringify(tableIds));

                                $.ajax({
                                url: "/TableOrderApp/assignTablePost",
                                type: "POST",
                                data: formData,
                                processData: false,
                                contentType: false,
                                dataType: 'json',
                                success: function (response) {
                                    if (response.success) {
                                     var $offcanvasEl = $('#AssignTable');
                                      var offcanvasInstance = bootstrap.Offcanvas.getInstance($offcanvasEl[0]);
                                      if (offcanvasInstance) {
                                         offcanvasInstance.hide();
                                          }
                                          redirectToMenuOrders(response.orderid);
                                        }
                                       else {
                                        toastr.error(response.message);
                                      }

                                },
                                error: function (error) {
                                    console.error("Error in assign table:", error);
                                }
                            });
                     }
    
                });
            
            $('#AssignTable').on('hidden.bs.offcanvas', function () {
            $('.form-control').val('');
            tableIds = [];
            $('.assign-btn').prop('disabled', true);
            $('.card')
                .removeClass('selected-table')
            });


});


</script>