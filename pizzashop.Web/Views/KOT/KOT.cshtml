@{

    Layout = "~/Views/Shared/_OrderAppLayout.cshtml";
}
<link rel="stylesheet" href="~/css/KOT.css" />



<div class="menu-category">

    <nav>
        <div class="nav nav-tabs  px-4  category-partial flex-nowrap overflow-x-auto overflow-y-hidden" id="nav-tab"
            role="tablist">
        </div>
    </nav>

    <div class="tab-content w-100 ticket-parial" id="nav-tabContent">
    </div>
</div>

<div class="tranfer-modal"></div>



<script>
    $(document).ready(function () {

        let currentCategoryId = 0;
        let currentCategoryName = "All";
        let currentStatus = "Inprogress";
        let currentPage = "@ViewBag.CurrentPage";

        // Set button text based on current status
        if (currentStatus === "Inprogress") {
            $('#updateStatusBtn').text("Mark as Prepared");
        } else if (currentStatus === "Ready") {
            $('#updateStatusBtn').text("Mark as In Progress");
        }


        function loadCategoryList(status) {
            $.ajax({

                url: "/KOT/CategoryList",
                type: "GET",
                data: {status: status},
                success: function (data) {
                    $('.category-partial').html(data);
                    $(`.cat-class`).removeClass('active').attr('aria-selected', 'false');
                    $(`.cat-class[data-catid="${currentCategoryId}"]`).addClass('active').attr('aria-selected', 'true');
                },
                error: function () {

                }
            });
        }

        loadCategoryList(currentStatus);

        function loadTicket(categoryId, status, page) {
            currentCategoryId = categoryId;

            $.ajax({

                url: "/KOT/loadTickets",
                type: "GET",
                data: { id: categoryId, status: status, page: page },
                success: function (data) {
                    $('.ticket-parial').html(data);
                    if (currentStatus === "Inprogress") {
                        $(".inprogress").addClass("filled-button").removeClass("unfilled-button");
                        $(".ready").removeClass("filled-button").addClass("unfilled-button");
                    } else {
                        $(".ready").addClass("filled-button").removeClass("unfilled-button");
                        $(".inprogress").removeClass("filled-button").addClass("unfilled-button");
                    }
                    $(".cat-name").text(currentCategoryName);
                    currentPage = page;
                },
                error: function () {
                }
            });
        }

        $(document).on("click", ".cat-class", function (e) {
            var categoryId = $(this).data("catid");
            currentCategoryName = $(this).data("catname");
            loadTicket(categoryId, "Inprogress", 1);
        });

        $(document).on("click", ".inprogress", function (e) {
            currentStatus = "Inprogress";
            loadTicket(currentCategoryId, currentStatus, 1);
            loadCategoryList(currentStatus);
        });

        $(document).on("click", ".ready", function (e) {
            currentStatus = "Ready";
            loadTicket(currentCategoryId, currentStatus, 1);
             loadCategoryList(currentStatus);
        });

        loadTicket(0, currentStatus, 1);

        $(document).on("click", ".pagination-link", function (e) {
            e.preventDefault();
            let page = $(this).data("page");

            if (page > 0) {
                loadTicket(currentCategoryId, currentStatus, page);
            }
        });


        $(document).on("click", ".order-card", function (e) {
            e.preventDefault();
            var orderid = $(this).data("orderid");
            $.ajax({

                url: "/KOT/OpenModel",
                type: "GET",
                data: { id: orderid, status: currentStatus },
                success: function (data) {
                    $(".tranfer-modal").html(data);
                    if (currentStatus === "Inprogress") {
                        $('#updateStatusBtn').text("Mark as Prepared");
                    } else if (currentStatus === "Ready") {
                        $('#updateStatusBtn').text("Mark as In Progress");
                    }
                    $("#orderModal").modal("show");
                    initializeQuantityButtons();
                },
                error: function () {
                }
            });


        });

        $(document).on('click', '.plus-btn, .minus-btn', function () {
            const $parent = $(this).closest('[data-orderitemid]');
            const $quantitySpan = $parent.find('.quantity');
            const max = parseInt($parent.data('max'));
            const orderitemid = $parent.data('orderitemid');

            let currentQty = parseInt($quantitySpan.text());

            if ($(this).hasClass('plus-btn')) {
                if (currentQty < max) {
                    currentQty++;
                }
            } else {
                if (currentQty > 1) {
                    currentQty--;
                }
            }

            $quantitySpan.text(currentQty);

            // OPTIONAL: Disable or gray out icons based on limits
            const $plus = $parent.find('.plus-btn');
            const $minus = $parent.find('.minus-btn');

            $plus.css('opacity', currentQty === max ? 0.5 : 1);
            $minus.css('opacity', currentQty === 1 ? 0.5 : 1);


            console.log(`Item ${itemId}, New Quantity: ${currentQty}`);
        });

        function initializeQuantityButtons() {
            $('[data-orderitemid]').each(function () {
                const $parent = $(this);
                const max = parseInt($parent.data('max'));
                const $quantitySpan = $parent.find('.quantity');
                const currentQty = parseInt($quantitySpan.text());

                const $plus = $parent.find('.plus-btn');
                const $minus = $parent.find('.minus-btn');

                $plus.css('opacity', currentQty >= max ? 0.5 : 1);
                $minus.css('opacity', currentQty <= 1 ? 0.5 : 1);

                $plus.css('pointer-events', currentQty >= max ? 'none' : 'auto');
                $minus.css('pointer-events', 'auto');
            });
        }


        $(document).on('click', '#updateStatusBtn', function () {
            const itemsToUpdate = [];

            // Extract Order ID from modal title
            const orderId = $('#orderModal').find('.modal-title').text().split('#')[1].trim();

            // Loop through all checked checkboxes
            $('#orderModal').find('input[type="checkbox"]:checked').each(function () {
                const $itemContainer = $(this).closest('.d-flex.justify-content-between');

                // Get itemId from the data attribute of the container
                const orderitemid = $itemContainer.find('[data-orderitemid]').data('orderitemid');

                // Get the updated quantity value
                const quantity = parseInt($itemContainer.find('.quantity').text());

                // Push the itemId and quantity to the array
                itemsToUpdate.push({ orderitemid, quantity });
            });

            // Status (Current Status) - to know whether we're updating 'Inprogress' or 'Ready'
            const newStatus = currentStatus === "Inprogress" ? "Ready" : "Inprogress";

            // Now you have an array with all the selected item IDs and their quantities
            console.log(itemsToUpdate);

            // Send the data to the backend (including Order ID and Status)
            $.ajax({
                url: '/KOT/UpdateItemStatus',  // Adjust URL as needed
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    orderId: orderId,
                    items: itemsToUpdate,
                    newStatus: newStatus  // Send the status as well
                }),
                success: function (res) {
                    console.log('Items updated successfully');
                    $('#orderModal').modal('hide');
                    loadTicket(currentCategoryId, currentStatus, currentPage); // Refresh the ticket list
                     loadCategoryList(currentStatus);
                },
                error: function () {
                    alert("Something went wrong while updating item status.");
                }
            });
        });






    });
</script>
