@{
    ViewData["Title"] = "Order page";
}

<link rel="stylesheet" href="~/css/Order.css" />

<div class="w-100 main-content px-lg-5 px-sm-4 px-4" id="Customer-table">

    <!-- heading text -->

    <div id="orderTablePartial">
        <div class="w-100 heading-back-button p-2 mt-2">
            <div class="heading-text">
                <h1><b>Customers</b></h1>
            </div>
            <div class="back-to-button d-flex gap-3 align-items-center">


                <div class="position-relative">
                    <input class="filter form-control me-2 border-0" id="searchCustomer" type="text"
                        placeholder="Search" aria-label="Search">
                    <i class="bi bi-search custom-icon"></i>
                </div>


                <select class="form-select filter" id="searchTimeWise" aria-label="Default select example">
                    <option selected value="all">All Time</option>
                    <option value="today">Today</option>
                    <option value="7">Last 7 Days</option>
                    <option value="30">Last 30 Days</option>
                    <option value="currentMonth">Current Month</option>
                    <option value="customdate">Custom Date</option>
                </select>

                <a clas="">
                    <button class="back-button" id="exportOrdersBtn">
                        <span><img src="~/images/export.svg" class="me-2 mb-1" width="30px">Export</span>
                    </button>
                </a>

            </div>
        </div>

        <div id="table-container"></div>

    </div>

</div>

<div class="modal fade modal-delete" id="customDateModal" tabindex="-1" aria-labelledby="deleteModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customDateModal">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex flex-column align-items-center justify-content-center">
                <img src="../images/warning-icon.svg" alt="" width="50px" height="50px"><br>
                <span>Are you sure you want to delete this Category?</span>
            </div>
            <input type="hidden" id="hidden" value="">
            <div class="modal-footer d-flex justify-content-center gap-2">
                <a class="delete-cat">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">YES</button>
                </a>
                <button type="button" class="btn btn-danger">NO</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

<script>

    let GCFromDate;
    let GCToDate;

    $(document).ready(function () {

        let currentPage = @ViewBag.CurrentPage;
        let searchQuery = "@ViewBag.SearchQuery" || "";
        let SortColumn = "@ViewBag.SortColumn" || "";
        let SortOrder = "@ViewBag.SortOrder" || "";

        @* load order table *@
            loadCustomerTable(1);

        function loadCustomerTable(page) {

            let pageSize = $("#pageSizeCustomer").val();
            let search = $("#searchCustomer").val(); // Get search input value


            $.ajax({
                url: "/Customer/Customer",
                type: "GET",
                data: {
                    page: page,
                    pageSize: pageSize,
                    search: search,
                    SortColumn: SortColumn,
                    SortOrder: SortOrder,
                    fromDate: GCFromDate,
                    toDate: GCToDate
                },
                success: function (data) {
                    $("#table-container").html(data);
                    currentPage = page;
                },
                error: function () {
                    alert("Failed to load data.");
                }
            });
        }

        @* page link button *@

            $("#Customer-table").on("click", ".pagination-link", function (e) {
                e.preventDefault();
                let page = $(this).data("page");

                if (page > 0) {
                    loadCustomerTable(page);
                }
            });

        @* sort column *@

            $("#Customer-table").on("click", ".sort", function (e) {
                e.preventDefault();
                SortColumn = $(this).data("column");
                SortOrder = $(this).data("order");
                loadCustomerTable(1);
            });

        @* page size  *@

            $("#Customer-table").on("change", "#pageSizeCustomer", function () {
                loadCustomerTable(1);
            });

        @* pagination link *@

            $("#Customer-table").on("click", ".pagination-link", function (e) {
                e.preventDefault();
                let page = $(this).data("page");

                if (page > 0) {
                    loadCustomerTable(page);
                }
            });

        @* search filter *@

            let searchTimer;
        $("#searchCustomer").on("input", function () {
            clearTimeout(searchTimer);
            searchTimer = setTimeout(function () {
                loadCustomerTable(1); // Reset to page 1 when searching
            }, 500); // 500ms delay to avoid excessive requests
        });



        @* Days filter *@

            $("#searchTimeWise").on("change", function () {

                let dateFilter = $(this).val();

                console.log(dateFilter);

                let fromDate = null;
                let toDate = null; // Set to null for "All" option

                let today = new Date();

                if (dateFilter === "7") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 7);
                    toDate = today;
                } else if (dateFilter === "30") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 30);
                    toDate = today;
                } else if (dateFilter === "currentMonth") {
                    fromDate = new Date(Date.UTC(today.getFullYear(), today.getMonth(), 1)); // First day of the current month
                    toDate = today;
                } else if (dateFilter === "today") {// Today
                    fromDate = today;
                    toDate = today;
                }
                else if (dateFilter === "customdate") {// Custom Date: Open modal
                    $("#customDateModal").modal("show");
                    return;// Stop execution here
                }

                // Convert dates to YYYY-MM-DD format for PostgreSQL
                fromDate = fromDate ? fromDate.toISOString().split("T")[0] : null;
                toDate = toDate ? toDate.toISOString().split("T")[0] : null;


                GCFromDate = fromDate;
                GCToDate = toDate;

                console.log(GCFromDate);
                console.log(GCToDate);

               loadCustomerTable(1);

            });



        @* export button  *@
            @* $("#exportOrdersBtn").click(function () {
                let searchQuery = $("#searchOrders").val();
                let status = $("#orderStatus").val();
                let dateFilter = $("#searchTimeWise").val();

                let fromDate = null;
                let toDate = null;

                let today = new Date();

                if (dateFilter === "7") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 7);
                    toDate = today;
                } else if (dateFilter === "30") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 30);
                    toDate = today;
                } else if (dateFilter === "currentMonth") {
                    fromDate = new Date(Date.UTC(today.getFullYear(), today.getMonth(), 1)); // First day of the current month
                    toDate = today;
                }

                fromDate = fromDate ? fromDate.toISOString().split("T")[0] : null;
                toDate = toDate ? toDate.toISOString().split("T")[0] : null;

                if (fromDate != GFromDate || toDate != GToDate) {
                    fromDate = GFromDate;
                    toDate = GToDate;
                }

                let url = `/Orders/ExportOrders?search=${searchQuery}&status=${status}&fromDate=${fromDate}&toDate=${toDate}`;

                window.location.href = url; // Triggers file download
            });
 *@

        
      

      
    });
</script>
