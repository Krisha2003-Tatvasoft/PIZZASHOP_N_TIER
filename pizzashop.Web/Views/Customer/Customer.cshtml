@{
    ViewData["Title"] = "Order page";
}

<link rel="stylesheet" href="~/css/Customer.css" />

<div class="w-100 main-content px-lg-5 px-sm-4 px-4" id="Customer-table">

    <!-- heading text -->


    <div class="w-100 heading-back-button d-block d-xl-flex  align-items-center justify-content-between  p-xl-2 mt-2">
        <div class="heading-text">
            <h1><b>Customers</b></h1>
        </div>
        <div
            class="back-to-button d-flex flex-column flex-sm-row gap-3 align-items-center   justify-content-sm-end  pb-2 pb-xl-0">



            <div class="position-relative " id="searchCustomerContainer">
                <input class="filter Search form-control me-2 border-0" id="searchCustomer" type="search"
                    placeholder="Search" aria-label="Search">
                <i class="bi bi-search custom-icon"></i>
            </div>


            <select class="form-select filter" id="searchTimeWise" aria-label="Default select example">
                <option selected value="all">All Time</option>
                <option value="today">Today</option>
                <option value="7">Last 7 Days</option>
                <option value="30">Last 30 Days</option>
                <option value="currentMonth">Current Month</option>
                <option value="customdate">Custom Date</option>
            </select>

            <a clas="">
                <button class="back-button" id="exportCustomersBtn">
                    <span><img src="~/images/export.svg" class="me-2 mb-1" width="30px"><span
                            class="d-inline d-sm-none d-md-inline">Export</span></span>
                </button>
            </a>

        </div>
    </div>

    <div id="table-container"></div>



</div>

<div class="modal fade modal-delete" id="customDateModal" tabindex="-1" aria-labelledby="deleteModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customDateModal">Select Data Range</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex gap-2 flex-row align-items-center justify-content-center">
                <div class="form-floating w-50">
                    <input type="date" class="form-control" id="FromDate" max="" placeholder="fromDate">
                    <label for="fromDate">From Date</label>
                </div>

                <div class="form-floating w-50">
                    <input type="date" class="form-control" id="ToDate" max="" placeholder="ToDate">
                    <label for="ToDate">To Date</label>
                </div>
            </div>

            <div class="modal-footer d-flex justify-content-center gap-2">
                <a id="serachDate">
                    <button type="button" class="search-btn">Submit</button>
                </a>
                <button type="button" class="clear-btn" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="modal-customer-history"></div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

<script>

    let GCFromDate;
    let GCToDate;

    function formatDate(date) {
        return date.toISOString().split("T")[0];
    }


    $(document).ready(function () {

        const today = new Date();
        const maxDate = formatDate(today);

        // Set max date to today for both inputs
        $("#FromDate").attr("max", maxDate);
        $("#ToDate").attr("max", maxDate);

        // When FromDate changes
        $("#FromDate").on("change", function () {
            const fromDate = $(this).val();
            $("#ToDate").attr("min", fromDate); // To date must be on/after From date
        });

        // When ToDate changes
        $("#ToDate").on("change", function () {
            const toDate = $(this).val();
            $("#FromDate").attr("max", toDate); // From date must be on/before To date
        });


        $('#customDateModal').on('show.bs.modal', function () {
            // Set max date to today for both inputs
            $("#FromDate").attr("max", maxDate);
            $("#ToDate").attr("max", maxDate).removeAttr("min");
        });

        let currentPage = @ViewBag.CurrentPage;
        let searchQuery = "@ViewBag.SearchQuery" || "";
        let SortColumn = "@ViewBag.SortColumn" || "";
        let SortOrder = "@ViewBag.SortOrder" || "";



        @* load order table *@
            loadCustomerTable(1);

        function loadCustomerTable(page) {

            let pageSize = $("#pageSizeCustomer").val();
            let search = $("#searchCustomer").val(); // Get search input value


            $.ajax({
                url: "/Customer/Customer",
                type: "GET",
                data: {
                    page: page,
                    pageSize: pageSize,
                    search: search,
                    SortColumn: SortColumn,
                    SortOrder: SortOrder,
                    fromDate: GCFromDate,
                    toDate: GCToDate
                },
                success: function (data) {
                    $("#table-container").html(data);
                    currentPage = page;
                },
                error: function () {
                    alert("Failed to load data.");
                }
            });
        }

        @* page link button *@

            $("#Customer-table").on("click", ".pagination-link", function (e) {
                e.preventDefault();
                let page = $(this).data("page");

                if (page > 0) {
                    loadCustomerTable(page);
                }
            });

        @* sort column *@

            $("#Customer-table").on("click", ".sort", function (e) {
                e.preventDefault();
                SortColumn = $(this).data("column");
                SortOrder = $(this).data("order");
                loadCustomerTable(1);
            });

        @* page size  *@

            $("#Customer-table").on("change", "#pageSizeCustomer", function () {
                loadCustomerTable(1);
            });

        @* pagination link *@

            $("#Customer-table").on("click", ".pagination-link", function (e) {
                e.preventDefault();
                let page = $(this).data("page");

                if (page > 0) {
                    loadCustomerTable(page);
                }
            });

        @* search filter *@

            let searchTimer;
        $("#searchCustomer").on("input", function () {
            var element = $(".custom-icon");
            element.addClass("d-none");
            clearTimeout(searchTimer);
            searchTimer = setTimeout(function () {
                loadCustomerTable(1); // Reset to page 1 when searching
            }, 500); // 500ms delay to avoid excessive requests
            searchcross();
        });



        @* Days filter *@

            $("#searchTimeWise").on("change", function () {

                $("#FromDate").val("");
                $("#ToDate").val("");

                let dateFilter = $(this).val();


                let fromDate = null;
                let toDate = null; // Set to null for "All" option

                let today = new Date();

                if (dateFilter === "7") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 7);
                    toDate = today;
                } else if (dateFilter === "30") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 30);
                    toDate = today;
                } else if (dateFilter === "currentMonth") {
                    fromDate = new Date(Date.UTC(today.getFullYear(), today.getMonth(), 1)); // First day of the current month
                    toDate = today;
                } else if (dateFilter === "today") {// Today
                    fromDate = today;
                    toDate = today;
                }
                else if (dateFilter === "customdate") {// Custom Date: Open modal
                    $("#customDateModal").modal("show");
                    return;// Stop execution here
                }

                // Convert dates to YYYY-MM-DD format for PostgreSQL
                fromDate = fromDate ? fromDate.toISOString().slice(0, 19).replace("T", " ") : null;
                toDate = toDate ? toDate.toISOString().slice(0, 19).replace("T", " ") : null;

                $("#FromDate").val(fromDate);
                $("#ToDate").val(toDate);

                GCFromDate = fromDate;
                GCToDate = toDate;


                loadCustomerTable(1);

            });

        $("#serachDate").on("click", function () {
            if ($("#FromDate").val() > $("#ToDate").val()) {
                toastr.error("To date should be greater than from date");
                return;
            }
            else {
                GCFromDate = $("#FromDate").val();
                GCToDate = $("#ToDate").val();
                loadCustomerTable(1);
                $("#customDateModal").modal("hide");
            }
        });



        function searchcross() {
            let search = $("#searchCustomer").val();
            if (search === "") {
                var element = $(".custom-icon");
                element.removeClass("d-none");
            }
        }



        @* export button  *@
            $("#exportCustomersBtn").click(function () {
                let searchQuery = $("#searchCustomer").val();
                let dateFilter = $("#searchTimeWise").val();

                let fromDate = null;
                let toDate = null;

                let today = new Date();

                if (dateFilter === "7") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 7);
                    toDate = today;
                } else if (dateFilter === "30") {
                    fromDate = new Date(today);
                    fromDate.setDate(today.getDate() - 30);
                    toDate = today;
                } else if (dateFilter === "currentMonth") {
                    fromDate = new Date(Date.UTC(today.getFullYear(), today.getMonth(), 1)); // First day of the current month
                    toDate = today;
                } else if (dateFilter === "today") {// Today
                    fromDate = today;
                    toDate = today;
                }
                else if (dateFilter === "customdate") {// Custom Date: Open modal
                    fromDate = GCFromDate;
                    toDate = GCToDate;
                }

                fromDate = fromDate ? fromDate.toISOString().split("T")[0] : null;
                toDate = toDate ? toDate.toISOString().split("T")[0] : null;

                let url = `/Customer/ExportCustomer?search=${searchQuery}&fromDate=${fromDate}&toDate=${toDate}`;

                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (response) {
                        if (typeof response === 'object' && response.success === false) {
                            toastr.error(response.message);
                        } else {
                            window.location.href = url; // Triggers file download
                        }
                    },
                    error: function () {
                        toastr.error("Error exporting data");
                    }
                });


            });


        @* load customer history *@
            $(document).on("click", ".customer-history", function () {
                let custId = $(this).data("custid");
                console.log(custId);

                $.ajax({
                    url: "/Customer/CustomerHistory",
                    type: "GET",
                    data: {
                        id: custId
                    },
                    success: function (data) {
                        $(".modal-customer-history").html(data);
                        $("#CustomerHistory").modal("show");
                    },
                    error: function () {
                        alert("Failed to load data.");
                    }
                });

            });

    });
</script>
